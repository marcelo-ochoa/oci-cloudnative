version: "3.6"

services:
    # Storefront application middleware
    # Node.js port 3000
    api:
        image: iad.ocir.io/oracle/ateam/mushop-api:2.1.0
        deploy:
            mode: replicated
            replicas: 1      
            labels:
                - traefik.enable=true
                - traefik.docker.network=lb_network
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.api.rule=PathPrefix(`/api/`)
                - traefik.http.services.api.loadbalancer.server.port=3000
        hostname: api
        environment:
            - PORT=3000
            - CATALOGUE_PORT=80
            - CATALOGUE_URL=http://catalogue
            - STATIC_MEDIA_URL=${STATIC_MEDIA_URL:-/assets}
            - MOCK_MODE=${MOCK_MODE}
            - NODE_ENV=${NODE_ENV}
        networks:
            - lb_network

    # Storefront backend API service
    # HTML static files (NGINX port 8080)
    storefront:
        image: iad.ocir.io/oracle/ateam/mushop-storefront:2.1.1
        deploy:
            mode: replicated
            replicas: 1      
            labels:
                - traefik.enable=true
                - traefik.docker.network=lb_network
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.storefront.rule=PathPrefix(`/`)
                - traefik.http.services.storefront.loadbalancer.server.port=8080
        hostname: storefront
        volumes:
            - /dev/shm:/dev/shm
        networks:
            - lb_network

    # OCI Catalog service
    # API Go App port 80
    catalogue:
        image: iad.ocir.io/oracle/ateam/mushop-catalogue:1.2
        hostname: catalogue
        environment:
            - OADB_USER=${OADB_USER}
            - OADB_PW=${OADB_PW}
            - OADB_SERVICE=${OADB_SERVICE}
        networks:
            - lb_network
        volumes:
            - /root/wallet:/usr/lib/oracle/19.3/client64/lib/network/admin

    traefik:
        image: traefik:v2.3.1
        ports:
            - target: 80
              published: 80
              protocol: tcp
              mode: host
            - target: 443
              published: 443
              protocol: tcp
              mode: host      
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
                max_attempts: 3
                window: 120s
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        command:
            - --providers.docker
            - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
            - --providers.docker.exposedbydefault=false
            - --providers.docker.swarmmode
            - --entrypoints.http.address=:80
            - --entrypoints.https.address=:443
            #- --log.level=INFO
            - --accesslog
            - --log
            - --api
        networks:
            - lb_network

networks:
  # Use the previously created public network "traefik-public", shared with other
  # services that need to be publicly available via this Traefik
  lb_network:
